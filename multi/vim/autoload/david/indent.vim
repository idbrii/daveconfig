" Call this manually when adding new syntax files.
function! david#indent#build_fold_syntax_script()
    let syntax_folders = []
    for path in split(&runtimepath, ',')
        let syn = path . '/syntax/'
        if isdirectory(syn)
            call add(syntax_folders, syn)
        endif
    endfor
    if len(syntax_folders) > 0
        let folders = join(syntax_folders, ' ')
        let filetypes = []
        for syntax_file in systemlist('grep --files-with-matches -e "^syn.*\bfold\b" -R '. folders)
            let ft = fnamemodify(syntax_file, ":t:r")
            call add(filetypes, ft)
        endfor
        
        let filetypes = uniq(sort(filetypes))
        let contents = [ '" Autogenerated by '. expand("<sfile>"), 'let s:foldable = {}', '' ]
        for ft in filetypes
            call add(contents, 'let s:foldable["'. ft .'"] = 1')
        endfor
        call extend(contents, [ '', 'function! david#gen#foldfiletypes#has_foldable_syntax(ft)', '    return get(s:foldable, a:ft, 0)', 'endf' ])

        edit ~/.vim/autoload/david/gen/foldfiletypes.vim
        normal! ggdG
        call append(0, contents)
        write
    endif
endf

function! david#indent#try_use_syntax_folds()
    " Still at default fold method. (Plugin didn't change to something else
    " and not in diff mode.)
    if &foldmethod == 'indent'
        if len(&filetype) > 0
            if david#gen#foldfiletypes#has_foldable_syntax(&filetype)
                setlocal foldmethod=syntax
            endif
        endif
    endif
endf

