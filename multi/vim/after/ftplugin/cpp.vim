
" Use :make to compile c, even without a makefile
" This is problematic with deep directories (and I don't understand glob)
"if glob('Makefile') == "" | let &mp="g++ -o %< %" | endif
setlocal cindent

if exists('loaded_cpp_extra') || &cp
    finish
endif
let loaded_cpp_extra = 1

" Filetype set fo+=o, but I tend to use o and O to add whitespace, not
" to continue comments
setlocal formatoptions-=o

runtime cscope_maps.vim

" macros
iabbrev _poff #pragma optimize("", off)
iabbrev _pon #pragma optimize("", on)
iabbrev #i #include
iabbrev #d #define
iabbrev D_P DBG_PRINT
iabbrev _guard_ #ifndef zzz<CR>#define zzz<CR><CR>#endif<ESC>kO

" Header comments (requires formatoptions+=r)
"  Creates a header with the filename, foldername, author, description, and
" copyright. Cursor is left on description and other fields are autogenerated
" (using abbrevs or guessed based on file).
" Different from generic version because it uses // instead of /**/
"nmap <Leader>hc ggO//<CR> @file	<C-r>%<CR>@ingroup	<C-r>=expand('%:p:h:t')<CR><CR><CR>@author	_me<CR>@brief	<CR><CR>Copyright (c) <C-R>=strftime("%Y")<CR> _company All Rights Reserved.<CR><Esc>3kA



" Fast switch between header and implementation (instead of lookup file)
"
" Source: http://vim.wikia.com/wiki/Easily_switch_between_source_and_header_file#By_modifying_ftplugins
function SwitchSourceHeader()
    if (expand ("%:t") == expand ("%:t:r") . ".h")
		try
			find %:t:r.cpp
		catch /^Vim\%((\a\+)\)\=:E345/
			" Error: Can't find file. Try inline instead.
			find %:t:r.inl
		endtry
    else
        find %:t:r.h
    endif
endfunction

nnoremap <A-o> :call SwitchSourceHeader()<CR>
