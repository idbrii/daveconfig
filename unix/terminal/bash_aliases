#! /bin/bash

# Bash shortcuts

SMART_GREP_OPTIONS=

# enable color support of ls and also add handy aliases
if [ -x /usr/bin/dircolors ]; then
    eval "`dircolors -b`"
    alias ls='ls --color=auto'
    #alias dir='dir --color=auto'
    #alias vdir='vdir --color=auto'

    alias grep='grep --color=auto'
    alias fgrep='fgrep --color=auto'
    alias egrep='egrep --color=auto'

	SMART_GREP_OPTIONS=' --color=auto'
fi


# ls
alias ll='ls -l'
alias lh='ls -lh'
alias la='ls -A'
alias lll='ls -Ahl'
alias les='/usr/share/vim/vim73/macros/less.sh'
llw() {
    # easily find target of symlinks
    ls -l $(which $1)
}

# Make grep more like ack.
#	Ignore binary files.
SMART_GREP_OPTIONS="$SMART_GREP_OPTIONS --binary-files=without-match"
# Check for exclude-dir to prevent invalid options in older versions of grep.
# Assume if we have exclude-dir, that we have exclude.
if /bin/grep --help | /bin/grep -- --exclude-dir &>/dev/null; then
	# Ignore version control folders.
    for PATTERN in .cvs .git .hg .svn; do
        SMART_GREP_OPTIONS="$SMART_GREP_OPTIONS --exclude-dir=$PATTERN"
    done
	# Ignore temp files.
    for PATTERN in *.swp; do
        SMART_GREP_OPTIONS="$SMART_GREP_OPTIONS --exclude=$PATTERN"
    done
fi
# export SMART_GREP_OPTIONS
alias gs='grep $SMART_GREP_OPTIONS'

# windows work-alike
alias cls='clear'
alias tracert='tracepath'


# python

# Ensure that ipython works with virtualenv. Instead of calling the ipython
# wrapper, just start the loop ourself. Virtualenv will provide us with the
# right python that uses the correct pythonpath.
alias ipython='python -c "import IPython; IPython.Shell.IPShell().mainloop()"'
#alias ipy='ipython'
alias ipy='screen -X title ipy ; ipython'

android_sdks=~/data/.android_devkit
alias and_export_sdk='export PATH=$PATH:$android_sdks/android-sdk-linux/tools:$android_sdks/android-sdk-linux/platform-tools'
alias and_go_sdk='cd $android_sdks/android-sdk-linux/platform-tools'
#alias and_ndk_build='$android_sdks/android-ndk-r4b/ndk-build'

# Version control
alias g=git
function init_skeleton {
    cp ../gitignore .gitignore
    git init
    git add .gitignore
    git ci -m'Initial commit'
    git add .
    git ci -m'Project skeleton'
}


# Quick way to view files in vim
function v { $* | view - ; }

function ge { gvim --remote-silent $* ; }
function vv { vim --servername VIM $* ; }

function move_and_link() {
    mv $1 $2
    ln -sv $2 $1
}

# Start serving the local directory as a website
alias webserve='python -m SimpleHTTPServer'


DIR=~/data/settings/daveconfig/unix/terminal

#################
# Location-specific section

source $DIR/local.bash_aliases

#################
# Platform-specific section

case "`uname -o`" in
Cygwin*)
	source $DIR/cygwin.bash_aliases
    ;;
GNU/Linux)
	source $DIR/ubuntu.bash_aliases
    ;;
darwin)
	source $DIR/mac.bash_aliases
    ;;
*)
	echo "bash_aliases: Platform not supported"
    ;;
esac



